// --------------------------------------------------------------------------------------------------------------------
// <copyright company="Aspose Pty Ltd" file="FileApiTests.cs">
//   Copyright (c) 2018 GroupDocs.Storage for Cloud
// </copyright>
// <summary>
//   Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
// 
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
// 
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
// </summary>
// --------------------------------------------------------------------------------------------------------------------

using GroupDocs.Storage.Cloud.Sdk.Api;
using GroupDocs.Storage.Cloud.Sdk.Model;
using GroupDocs.Storage.Cloud.Sdk.Model.Requests;
using GroupDocs.Storage.Cloud.Sdk.Test.Base;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.IO;
using GroupDocs.Storage.Cloud.Sdk.Internal;
using System.Xml.Serialization;

namespace GroupDocs.Storage.Cloud.Sdk.Test
{
    /// <summary>
    ///  Class for testing FileApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestClass]
    public class FileApiTests : BaseTestContext
    {
        private readonly string dataFolder = Path.Combine(BaseTestDataPath, "filesTests");
        private readonly string storageName = "StorageName";
        private readonly string destStorageName = "DestStorageName";

        /// <summary>
        /// Test FileGetDownload
        /// </summary>
        [TestMethod]
        public void FileGetDownloadTest()
        {
            GetDownloadRequest request = new GetDownloadRequest();
            request.path = Path.Combine(dataFolder, "TestFile.pdf");
            request.storage = storageName;
            request.versionId = null;
            var response = FileApi.GetDownload(request);
            Assert.IsNotNull(response);
        }

        /// <summary>
        /// Test FileDeleteFile
        /// </summary>
        [TestMethod]
        public void FileDeleteFileTest()
        {
            DeleteFileRequest request = new DeleteFileRequest();
            request.path = Path.Combine(dataFolder, "TestFile.pdf");
            request.storage = storageName;
            request.versionId = null;
            var response = FileApi.DeleteFile(request);
            Assert.AreEqual(200, response.Code);
        }

        /// <summary>
        /// Test FilePostMoveFile
        /// </summary>
        [TestMethod]
        public void FilePostMoveFileTest()
        {
            PostMoveFileRequest request = new PostMoveFileRequest();
            request.src = Path.Combine(dataFolder, "TestFile1.pdf");
            request.storage = storageName;
            request.dest = Path.Combine(dataFolder, "TestFile2.pdf");
            request.destStorage = destStorageName;
            request.versionId = null;
            var response = FileApi.PostMoveFile(request);
            Assert.AreEqual(200, response.Code);

        }

        /// <summary>
        /// Test FilePutCreate
        /// </summary>
        [TestMethod]
        public void FilePutCreateTest()
        {
            string path = Path.Combine(dataFolder, "folder2/TestFile1.pdf");
            PutCreateRequest request = new PutCreateRequest();
            request.path = Path.Combine(dataFolder, "folder4/TestFile1.pdf");
            request.File = FileApi.GetDownload(new GetDownloadRequest(path, null, storageName));
            request.storage = destStorageName;
            request.versionId = null;
            var response = FileApi.PutCreate(request);
            Assert.AreEqual(200, response.Code);

        }

        /// <summary>
        /// Test FilePutCopy
        /// </summary>
        [TestMethod]
        public void FilePutCopyTest()
        {
            PutCopyRequest request = new PutCopyRequest();
            request.path = Path.Combine(dataFolder, "/folder2/TestFile1.pdf");
            request.storage = storageName;
            request.versionId = null;
            request.newdest = Path.Combine(dataFolder, "folder3/TestFile1.pdf");
            request.destStorage = destStorageName;
            var response = FileApi.PutCopy(request);
            Assert.AreEqual(200, response.Code);

        }

    }

}
