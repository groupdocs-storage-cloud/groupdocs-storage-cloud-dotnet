// --------------------------------------------------------------------------------------------------------------------
// <copyright company="Aspose Pty Ltd" file="FolderApiTests.cs">
//   Copyright (c) 2018 GroupDocs.Storage for Cloud
// </copyright>
// <summary>
//   Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
// 
//  The above copyright notice and this permission notice shall be included in all
//  copies or substantial portions of the Software.
// 
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//  SOFTWARE.
// </summary>
// --------------------------------------------------------------------------------------------------------------------

using System;
using GroupDocs.Storage.Cloud.Sdk.Api;
using GroupDocs.Storage.Cloud.Sdk.Test.Base;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.IO;
using GroupDocs.Storage.Cloud.Sdk.Model;
using GroupDocs.Storage.Cloud.Sdk.Model.Requests;

namespace GroupDocs.Storage.Cloud.Sdk.Test
{
    /// <summary>
    ///  Class for testing FolderApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestClass]
    public class FolderApiTests : BaseTestContext
    {
        private readonly string dataFolder = Path.Combine(BaseTestDataPath, "foldersTests");
        private readonly string storageName = "StorageName";
        private readonly string destStorageName = "destStorageName";

        /// <summary>
        /// Test FolderDeleteFolder
        /// </summary>
        [TestMethod]
        public void FolderDeleteFolderTest()
        {
            DeleteFolderRequest request = new DeleteFolderRequest();
            request.path = Path.Combine(dataFolder, "folder1");
            request.recursive = true;
            request.storage = storageName;
            var response = FolderApi.DeleteFolder(request);
            Assert.AreEqual(200, response.Code);
        }

        /// <summary>
        /// Test FolderGetListFiles
        /// </summary>
        [TestMethod]
        public void FolderGetListFilesTest()
        {
            GetListFilesRequest request = new GetListFilesRequest();
            request.path = Path.Combine(dataFolder, "folder2");
            request.storage = storageName;
            var response = FolderApi.GetListFiles(request);
            Assert.AreEqual(200, response.Code);
        }

        /// <summary>
        /// Test FolderPutCreateFolder
        /// </summary>
        [TestMethod]
        public void FolderPutCreateFolderTest()
        {
            PutCreateFolderRequest request = new PutCreateFolderRequest();
            request.path = Path.Combine(dataFolder, "folder1");
            request.storage = storageName;
            request.destStorage = destStorageName;
            var response = FolderApi.PutCreateFolder(request);
            Assert.AreEqual(200, response.Code);
        }

        /// <summary>
        /// Test FolderPutCopyFolder
        /// </summary>
        [TestMethod]
        public void FolderPutCopyFolderTest()
        {
            PutCopyFolderRequest request = new PutCopyFolderRequest();
            request.path = Path.Combine(dataFolder, "folder1");
            request.storage = storageName;
            request.newdest = "folder4/folder3/folder1";
            request.destStorage = destStorageName;
            var response = FolderApi.PutCopyFolder(request);
            Assert.AreEqual(200, response.Code);
        }

        /// <summary>
        /// Test FolderPostMoveFolder
        /// </summary>
        [TestMethod]
        public void FolderPostMoveFolderTest()
        {
            PostMoveFolderRequest request = new PostMoveFolderRequest();
            request.src = Path.Combine(dataFolder, "folder1");
            request.storage = storageName;
            request.dest = Path.Combine(dataFolder, "folder2");
            request.destStorage = destStorageName;
            var response = FolderApi.PostMoveFolder(request);
            Assert.AreEqual(200, response.Code.Value);
        }

    }

}
